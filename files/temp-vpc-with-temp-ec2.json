{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Template to create a temporary VPC with a temporary EC2 instance",

  "Parameters" : {

    "StackName": {
      "Description" : "Name of the stack",
      "Type" : "String"
    },

    "InstanceType" : {
      "Description" : "Temporary EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large"],
      "ConstraintDescription" : "Must be a valid EC2 instance type."
    },

    "AwsRegion": {
      "Description" : "Region where to create the resources",
      "Type" : "String"
    },

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },

    "DiskSizeGb": {
      "Description" : "Total size in GB of the disk used as a template to create the new AMI",
      "Type" : "String"
      },

    "DiskDevice": {
      "Description" : "Device name for the second volume which is the template for the AMI",
      "Type" : "String"
    },

    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "CidrBase": {
      "Description" : "First two numbers in the IP range allocated to this stack (eg: '10.89')",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
      "Type" : "String"
    }

  },

  "Mappings" : {
    "AwsRegion2CentOsAmi" : {
      "us-east-1"        : {"CentOsAmi" : "ami-6d1c2007"},
      "us-west-2"        : {"CentOsAmi" : "ami-d2c924b2"},
      "us-west-1"        : {"CentOsAmi" : "ami-af4333cf"},
      "eu-west-1"        : {"CentOsAmi" : "ami-7abd0209"},
      "eu-central-1"     : {"CentOsAmi" : "ami-9bf712f4"},
      "ap-northeast-1"   : {"CentOsAmi" : "ami-eec1c380"},
      "ap-northeast-2"   : {"CentOsAmi" : "ami-c74789a9"},
      "ap-southeast-1"   : {"CentOsAmi" : "ami-f068a193"},
      "ap-southeast-2"   : {"CentOsAmi" : "ami-fedafc9d"},
      "sa-east-1"        : {"CentOsAmi" : "ami-26b93b4a"}
    }
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::Join" : [ ".", [ { "Ref": "CidrBase" }, "0.0/16" ] ] },
        "Tags" : [ {"Key" : "Name", "Value" : { "Ref" : "StackName"} } ]
      }
    },

    "Subnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ { "Ref": "CidrBase" }, "1.0/24" ] ] },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "SubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },

    "IPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "AmiBuilderInstance" }
      }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
         ]
      }
    },

    "AmiBuilderInstance" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AwsRegion2CentOsAmi", { "Ref" : "AwsRegion" }, "CentOsAmi"] },
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "Subnet" },
        "SecurityGroupIds": [{ "Ref" : "InstanceSecurityGroup" }]
      }
    },

    "TemplateVolume" : {
      "Type" : "AWS::EC2::Volume",
      "Properties" : {
        "Size" : { "Ref" : "DiskSizeGb" },
        "VolumeType" : "gp2",
        "AvailabilityZone" : { "Fn::GetAtt" : [ "AmiBuilderInstance", "AvailabilityZone" ] }
      },
      "DeletionPolicy" : "Delete"
    },

    "TemplateVolumeAttachment" : {
      "Type" : "AWS::EC2::VolumeAttachment",
      "Properties" : {
        "InstanceId" : { "Ref" : "AmiBuilderInstance" },
        "VolumeId"  : { "Ref" : "TemplateVolume" },
        "Device" : { "Ref" : "DiskDevice" }
      }
    }

  },

  "Outputs" : {
    
    "Ec2PublicIpAddr" : {
      "Value" : { "Fn::GetAtt" : ["AmiBuilderInstance", "PublicIp"] },
      "Description" : "Public IP address of the temporary EC2 instance"
    },

    "Ec2InstanceId" : {
      "Value": { "Ref": "AmiBuilderInstance" },
      "Description" : "EC2 instance ID"
    },

    "TemplateVolumeId" : {
      "Value": { "Ref": "TemplateVolume" },
      "Description" : "Template Volume ID"
    },

    "VpcId": {
      "Description": "The VPC ID",
      "Value": { "Ref": "VPC" }
    }

  }
}
