---
- name: Stop the temporary instance
  ec2:
    aws_access_key: "{{ centos_ami_builder_aws_access_key | default('') }}"
    aws_secret_key: "{{ centos_ami_builder_aws_secret_key | default('') }}"
    region: "{{ centos_ami_builder_aws_region }}"
    instance_id: "{{ centos_ami_builder_ec2_instance_id }}"
    state: stopped
    wait: True

- name: Detach both volumes from the temporary instance
  ec2_vol:
    aws_access_key: "{{ centos_ami_builder_aws_access_key | default('') }}"
    aws_secret_key: "{{ centos_ami_builder_aws_secret_key | default('') }}"
    region: "{{ centos_ami_builder_aws_region }}"
    id: "{{ item }}"
    instance: ""
  with_items:
    - "{{ centos_ami_builder_ebs_root_id }}"
    - "{{ centos_ami_builder_ebs_secondary_id }}"

- name: Reattach secondary volume as the root volume of the instance
  ec2_vol:
      aws_access_key: "{{ centos_ami_builder_aws_access_key | default('') }}"
      aws_secret_key: "{{ centos_ami_builder_aws_secret_key | default('') }}"
      region: "{{ centos_ami_builder_aws_region }}"
      id: "{{ centos_ami_builder_ebs_secondary_id }}"
      state: "present"
      instance: "{{ centos_ami_builder_ec2_instance_id }}"
      device_name: "/dev/sda1"
      delete_on_termination: yes

- name: Determine timestamp
  set_fact:
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d_%H%M%S') }}"

- name: Determine full name of the new AMI
  set_fact:
    centos_ami_builder_ami_fullname: "{{ centos_ami_builder_ami_name }}_{{ timestamp }}"

- name: Determine default tags of the new AMI
  set_fact:
    centos_ami_builder_ami_deftags:
      Name: "{{ centos_ami_builder_ami_fullname }}"
      ctime: "{{ timestamp }}"

- name: Create AMI from the temporary instance using the secondary volume
  ec2_ami:
    aws_access_key: "{{ centos_ami_builder_aws_access_key | default('') }}"
    aws_secret_key: "{{ centos_ami_builder_aws_secret_key | default('') }}"
    region: "{{ centos_ami_builder_aws_region }}"
    instance_id: "{{ centos_ami_builder_ec2_instance_id }}"
    name: "{{ centos_ami_builder_ami_fullname }}"
    tags: "{{ centos_ami_builder_ami_deftags | combine(centos_ami_builder_ami_tags) }}"
    wait: yes
    device_mapping:
      - device_name: "/dev/sda1"
        size: "{{ centos_ami_builder_disksize }}"
        volume_type: "{{ centos_ami_builder_disktype }}"
        delete_on_termination: true
  register: myami

- name: Detach root volumes from the temporary instance
  ec2_vol:
    aws_access_key: "{{ centos_ami_builder_aws_access_key | default('') }}"
    aws_secret_key: "{{ centos_ami_builder_aws_secret_key | default('') }}"
    region: "{{ centos_ami_builder_aws_region }}"
    id: "{{ centos_ami_builder_ebs_secondary_id }}"
    instance: ""

- name: Reattach original volume to allow proper destruction of the stack
  ec2_vol:
      aws_access_key: "{{ centos_ami_builder_aws_access_key | default('') }}"
      aws_secret_key: "{{ centos_ami_builder_aws_secret_key | default('') }}"
      region: "{{ centos_ami_builder_aws_region }}"
      id: "{{ centos_ami_builder_ebs_root_id }}"
      state: "present"
      instance: "{{ centos_ami_builder_ec2_instance_id }}"
      device_name: "/dev/sda1"
      delete_on_termination: yes

- name: Destroy secondary root volume of the temporary instance
  ec2_vol:
    aws_access_key: "{{ centos_ami_builder_aws_access_key | default('') }}"
    aws_secret_key: "{{ centos_ami_builder_aws_secret_key | default('') }}"
    region: "{{ centos_ami_builder_aws_region }}"
    id: "{{ centos_ami_builder_ebs_secondary_id }}"
    state: "absent"

- name: Show resulting AMI
  debug: msg="AMI has been created with ID {{ myami.image_id }}"
